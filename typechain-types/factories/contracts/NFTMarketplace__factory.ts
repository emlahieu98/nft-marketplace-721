/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../../contracts/NFTMarketplace";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "buyNftEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listNftEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "buyNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "changePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "delistNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getIsSold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listNft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nftItems",
    outputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600081905550611164806100286000396000f3fe6080604052600436106100705760003560e01c806386a097ce1161004e57806386a097ce146100fb578063b3de019c14610138578063c922b17c14610161578063e75722301461019e57610070565b8063243adbdd146100755780634e7914831461009157806362821396146100ba575b600080fd5b61008f600480360381019061008a9190610c63565b6101db565b005b34801561009d57600080fd5b506100b860048036038101906100b39190610c63565b610518565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610c63565b610754565b6040516100f2959493929190610d1c565b60405180910390f35b34801561010757600080fd5b50610122600480360381019061011d9190610c63565b6107e7565b60405161012f9190610d6f565b60405180910390f35b34801561014457600080fd5b5061015f600480360381019061015a9190610d8a565b610823565b005b34801561016d57600080fd5b5061018860048036038101906101839190610df6565b61093b565b6040516101959190610e49565b60405180910390f35b3480156101aa57600080fd5b506101c560048036038101906101c09190610c63565b610b76565b6040516101d29190610e49565b60405180910390f35b6101e3610baa565b6000600182815481106101f9576101f8610e64565b5b906000526020600020906005020190508060030154341461024f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024690610ef0565b60405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990610f5c565b60405180910390fd5b8060040160009054906101000a900460ff1615610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b90610fc8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f82168ec2243f2cad10367d9c10b94d83e966d0cde45a9d6991510bd9606d7c9c8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846001015485600301546040516103e593929190610fe8565b60405180910390a38060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600101546040518463ffffffff1660e01b81526004016104529392919061101f565b600060405180830381600087803b15801561046c57600080fd5b505af1158015610480573d6000803e3d6000fd5b505050508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156104ee573d6000803e3d6000fd5b5060018160040160006101000a81548160ff02191690831515021790555050610515610bfa565b50565b60006001828154811061052e5761052d610e64565b5b906000526020600020906005020190508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c7906110a2565b60405180910390fd5b8060040160009054906101000a900460ff1615610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061990610fc8565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600101546040518463ffffffff1660e01b81526004016106879392919061101f565b600060405180830381600087803b1580156106a157600080fd5b505af11580156106b5573d6000803e3d6000fd5b50505050600182815481106106cd576106cc610e64565b5b9060005260206000209060050201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549060ff021916905550505050565b6001818154811061076457600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b6000600182815481106107fd576107fc610e64565b5b906000526020600020906005020160040160009054906101000a900460ff169050919050565b60006001838154811061083957610838610e64565b5b906000526020600020906005020190508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d2906110a2565b60405180910390fd5b8060040160009054906101000a900460ff161561092d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092490610fc8565b60405180910390fd5b818160030181905550505050565b6000610945610baa565b61094f6002610c04565b600061095b6002610c1a565b90508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161099a9392919061101f565b600060405180830381600087803b1580156109b457600080fd5b505af11580156109c8573d6000803e3d6000fd5b5050505060016040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200160001515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167f38b9c0f1bc493fb71315e699b3343b9bcc1c269279aa92a9906a7caecf489f2c868686604051610b5b93929190610fe8565b60405180910390a280915050610b6f610bfa565b9392505050565b60008060018381548110610b8d57610b8c610e64565b5b906000526020600020906005020190508060030154915050919050565b60026000541415610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be79061110e565b60405180910390fd5b6002600081905550565b6001600081905550565b6001816000016000828254019250508190555050565b600081600001549050919050565b600080fd5b6000819050919050565b610c4081610c2d565b8114610c4b57600080fd5b50565b600081359050610c5d81610c37565b92915050565b600060208284031215610c7957610c78610c28565b5b6000610c8784828501610c4e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cbb82610c90565b9050919050565b610ccb81610cb0565b82525050565b610cda81610c2d565b82525050565b6000610ceb82610c90565b9050919050565b610cfb81610ce0565b82525050565b60008115159050919050565b610d1681610d01565b82525050565b600060a082019050610d316000830188610cc2565b610d3e6020830187610cd1565b610d4b6040830186610cf2565b610d586060830185610cd1565b610d656080830184610d0d565b9695505050505050565b6000602082019050610d846000830184610d0d565b92915050565b60008060408385031215610da157610da0610c28565b5b6000610daf85828601610c4e565b9250506020610dc085828601610c4e565b9150509250929050565b610dd381610cb0565b8114610dde57600080fd5b50565b600081359050610df081610dca565b92915050565b600080600060608486031215610e0f57610e0e610c28565b5b6000610e1d86828701610de1565b9350506020610e2e86828701610c4e565b9250506040610e3f86828701610c4e565b9150509250925092565b6000602082019050610e5e6000830184610cd1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f5072696365206973206e6f7420636f7272656374000000000000000000000000600082015250565b6000610eda601483610e93565b9150610ee582610ea4565b602082019050919050565b60006020820190508181036000830152610f0981610ecd565b9050919050565b7f4f776e65722063616e6e6f74206275792074686973206e667420000000000000600082015250565b6000610f46601a83610e93565b9150610f5182610f10565b602082019050919050565b60006020820190508181036000830152610f7581610f39565b9050919050565b7f4974656d20697320616c726561647920736f6c64000000000000000000000000600082015250565b6000610fb2601483610e93565b9150610fbd82610f7c565b602082019050919050565b60006020820190508181036000830152610fe181610fa5565b9050919050565b6000606082019050610ffd6000830186610cc2565b61100a6020830185610cd1565b6110176040830184610cd1565b949350505050565b60006060820190506110346000830186610cc2565b6110416020830185610cc2565b61104e6040830184610cd1565b949350505050565b7f4f6e6c792073656c6c65722063616e2064656c697374204e4654206974656d73600082015250565b600061108c602083610e93565b915061109782611056565b602082019050919050565b600060208201905081810360008301526110bb8161107f565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006110f8601f83610e93565b9150611103826110c2565b602082019050919050565b60006020820190508181036000830152611127816110eb565b905091905056fea2646970667358221220a78d65a71a46ae76059a3a851ed3fd3eb9f90cd34dfb5507cd6701049eb2796a64736f6c63430008090033";

type NFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketplace__factory extends ContractFactory {
  constructor(...args: NFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarketplace> {
    return super.deploy(overrides || {}) as Promise<NFTMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTMarketplace {
    return super.attach(address) as NFTMarketplace;
  }
  override connect(signer: Signer): NFTMarketplace__factory {
    return super.connect(signer) as NFTMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new utils.Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketplace;
  }
}
